import { EndpointParameterInstructions } from "@aws-sdk/middleware-endpoint";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer, MiddlewareStack } from "@aws-sdk/types";
import { LightsailClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../LightsailClient";
import { UpdateBucketBundleRequest, UpdateBucketBundleResult } from "../models/models_1";
/**
 * @public
 *
 * The input for {@link UpdateBucketBundleCommand}.
 */
export interface UpdateBucketBundleCommandInput extends UpdateBucketBundleRequest {
}
/**
 * @public
 *
 * The output of {@link UpdateBucketBundleCommand}.
 */
export interface UpdateBucketBundleCommandOutput extends UpdateBucketBundleResult, __MetadataBearer {
}
/**
 * @public
 * <p>Updates the bundle, or storage plan, of an existing Amazon Lightsail bucket.</p>
 *          <p>A bucket bundle specifies the monthly cost, storage space, and data transfer quota for a
 *       bucket. You can update a bucket's bundle only one time within a monthly Amazon Web Services
 *       billing cycle. To determine if you can update a bucket's bundle, use the <a href="https://docs.aws.amazon.com/lightsail/2016-11-28/api-reference/API_GetBuckets.html">GetBuckets</a> action. The
 *         <code>ableToUpdateBundle</code> parameter in the response will indicate whether you can
 *       currently update a bucket's bundle.</p>
 *          <p>Update a bucket's bundle if it's consistently going over its storage space or data
 *       transfer quota, or if a bucket's usage is consistently in the lower range of its storage space
 *       or data transfer quota. Due to the unpredictable usage fluctuations that a bucket might
 *       experience, we strongly recommend that you update a bucket's bundle only as a long-term
 *       strategy, instead of as a short-term, monthly cost-cutting measure. Choose a bucket bundle
 *       that will provide the bucket with ample storage space and data transfer for a long time to
 *       come.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { LightsailClient, UpdateBucketBundleCommand } from "@aws-sdk/client-lightsail"; // ES Modules import
 * // const { LightsailClient, UpdateBucketBundleCommand } = require("@aws-sdk/client-lightsail"); // CommonJS import
 * const client = new LightsailClient(config);
 * const input = { // UpdateBucketBundleRequest
 *   bucketName: "STRING_VALUE", // required
 *   bundleId: "STRING_VALUE", // required
 * };
 * const command = new UpdateBucketBundleCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @param UpdateBucketBundleCommandInput - {@link UpdateBucketBundleCommandInput}
 * @returns {@link UpdateBucketBundleCommandOutput}
 * @see {@link UpdateBucketBundleCommandInput} for command's `input` shape.
 * @see {@link UpdateBucketBundleCommandOutput} for command's `response` shape.
 * @see {@link LightsailClientResolvedConfig | config} for LightsailClient's `config` shape.
 *
 * @throws {@link AccessDeniedException} (client fault)
 *  <p>Lightsail throws this exception when the user cannot be authenticated or uses invalid
 *       credentials to access a resource.</p>
 *
 * @throws {@link InvalidInputException} (client fault)
 *  <p>Lightsail throws this exception when user input does not conform to the validation rules
 *       of an input field.</p>
 *          <note>
 *             <p>Domain and distribution APIs are only available in the N. Virginia
 *           (<code>us-east-1</code>) Amazon Web Services Region. Please set your Amazon Web Services
 *         Region configuration to <code>us-east-1</code> to create, view, or edit these
 *         resources.</p>
 *          </note>
 *
 * @throws {@link NotFoundException} (client fault)
 *  <p>Lightsail throws this exception when it cannot find a resource.</p>
 *
 * @throws {@link ServiceException} (server fault)
 *  <p>A general service exception.</p>
 *
 * @throws {@link UnauthenticatedException} (client fault)
 *  <p>Lightsail throws this exception when the user has not been authenticated.</p>
 *
 *
 */
export declare class UpdateBucketBundleCommand extends $Command<UpdateBucketBundleCommandInput, UpdateBucketBundleCommandOutput, LightsailClientResolvedConfig> {
    readonly input: UpdateBucketBundleCommandInput;
    static getEndpointParameterInstructions(): EndpointParameterInstructions;
    /**
     * @public
     */
    constructor(input: UpdateBucketBundleCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: LightsailClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateBucketBundleCommandInput, UpdateBucketBundleCommandOutput>;
    /**
     * @internal
     */
    private serialize;
    /**
     * @internal
     */
    private deserialize;
}
