import { HttpHandlerOptions as __HttpHandlerOptions } from "@aws-sdk/types";
import {
  AllocateStaticIpCommandInput,
  AllocateStaticIpCommandOutput,
} from "./commands/AllocateStaticIpCommand";
import {
  AttachCertificateToDistributionCommandInput,
  AttachCertificateToDistributionCommandOutput,
} from "./commands/AttachCertificateToDistributionCommand";
import {
  AttachDiskCommandInput,
  AttachDiskCommandOutput,
} from "./commands/AttachDiskCommand";
import {
  AttachInstancesToLoadBalancerCommandInput,
  AttachInstancesToLoadBalancerCommandOutput,
} from "./commands/AttachInstancesToLoadBalancerCommand";
import {
  AttachLoadBalancerTlsCertificateCommandInput,
  AttachLoadBalancerTlsCertificateCommandOutput,
} from "./commands/AttachLoadBalancerTlsCertificateCommand";
import {
  AttachStaticIpCommandInput,
  AttachStaticIpCommandOutput,
} from "./commands/AttachStaticIpCommand";
import {
  CloseInstancePublicPortsCommandInput,
  CloseInstancePublicPortsCommandOutput,
} from "./commands/CloseInstancePublicPortsCommand";
import {
  CopySnapshotCommandInput,
  CopySnapshotCommandOutput,
} from "./commands/CopySnapshotCommand";
import {
  CreateBucketAccessKeyCommandInput,
  CreateBucketAccessKeyCommandOutput,
} from "./commands/CreateBucketAccessKeyCommand";
import {
  CreateBucketCommandInput,
  CreateBucketCommandOutput,
} from "./commands/CreateBucketCommand";
import {
  CreateCertificateCommandInput,
  CreateCertificateCommandOutput,
} from "./commands/CreateCertificateCommand";
import {
  CreateCloudFormationStackCommandInput,
  CreateCloudFormationStackCommandOutput,
} from "./commands/CreateCloudFormationStackCommand";
import {
  CreateContactMethodCommandInput,
  CreateContactMethodCommandOutput,
} from "./commands/CreateContactMethodCommand";
import {
  CreateContainerServiceCommandInput,
  CreateContainerServiceCommandOutput,
} from "./commands/CreateContainerServiceCommand";
import {
  CreateContainerServiceDeploymentCommandInput,
  CreateContainerServiceDeploymentCommandOutput,
} from "./commands/CreateContainerServiceDeploymentCommand";
import {
  CreateContainerServiceRegistryLoginCommandInput,
  CreateContainerServiceRegistryLoginCommandOutput,
} from "./commands/CreateContainerServiceRegistryLoginCommand";
import {
  CreateDiskCommandInput,
  CreateDiskCommandOutput,
} from "./commands/CreateDiskCommand";
import {
  CreateDiskFromSnapshotCommandInput,
  CreateDiskFromSnapshotCommandOutput,
} from "./commands/CreateDiskFromSnapshotCommand";
import {
  CreateDiskSnapshotCommandInput,
  CreateDiskSnapshotCommandOutput,
} from "./commands/CreateDiskSnapshotCommand";
import {
  CreateDistributionCommandInput,
  CreateDistributionCommandOutput,
} from "./commands/CreateDistributionCommand";
import {
  CreateDomainCommandInput,
  CreateDomainCommandOutput,
} from "./commands/CreateDomainCommand";
import {
  CreateDomainEntryCommandInput,
  CreateDomainEntryCommandOutput,
} from "./commands/CreateDomainEntryCommand";
import {
  CreateGUISessionAccessDetailsCommandInput,
  CreateGUISessionAccessDetailsCommandOutput,
} from "./commands/CreateGUISessionAccessDetailsCommand";
import {
  CreateInstancesCommandInput,
  CreateInstancesCommandOutput,
} from "./commands/CreateInstancesCommand";
import {
  CreateInstancesFromSnapshotCommandInput,
  CreateInstancesFromSnapshotCommandOutput,
} from "./commands/CreateInstancesFromSnapshotCommand";
import {
  CreateInstanceSnapshotCommandInput,
  CreateInstanceSnapshotCommandOutput,
} from "./commands/CreateInstanceSnapshotCommand";
import {
  CreateKeyPairCommandInput,
  CreateKeyPairCommandOutput,
} from "./commands/CreateKeyPairCommand";
import {
  CreateLoadBalancerCommandInput,
  CreateLoadBalancerCommandOutput,
} from "./commands/CreateLoadBalancerCommand";
import {
  CreateLoadBalancerTlsCertificateCommandInput,
  CreateLoadBalancerTlsCertificateCommandOutput,
} from "./commands/CreateLoadBalancerTlsCertificateCommand";
import {
  CreateRelationalDatabaseCommandInput,
  CreateRelationalDatabaseCommandOutput,
} from "./commands/CreateRelationalDatabaseCommand";
import {
  CreateRelationalDatabaseFromSnapshotCommandInput,
  CreateRelationalDatabaseFromSnapshotCommandOutput,
} from "./commands/CreateRelationalDatabaseFromSnapshotCommand";
import {
  CreateRelationalDatabaseSnapshotCommandInput,
  CreateRelationalDatabaseSnapshotCommandOutput,
} from "./commands/CreateRelationalDatabaseSnapshotCommand";
import {
  DeleteAlarmCommandInput,
  DeleteAlarmCommandOutput,
} from "./commands/DeleteAlarmCommand";
import {
  DeleteAutoSnapshotCommandInput,
  DeleteAutoSnapshotCommandOutput,
} from "./commands/DeleteAutoSnapshotCommand";
import {
  DeleteBucketAccessKeyCommandInput,
  DeleteBucketAccessKeyCommandOutput,
} from "./commands/DeleteBucketAccessKeyCommand";
import {
  DeleteBucketCommandInput,
  DeleteBucketCommandOutput,
} from "./commands/DeleteBucketCommand";
import {
  DeleteCertificateCommandInput,
  DeleteCertificateCommandOutput,
} from "./commands/DeleteCertificateCommand";
import {
  DeleteContactMethodCommandInput,
  DeleteContactMethodCommandOutput,
} from "./commands/DeleteContactMethodCommand";
import {
  DeleteContainerImageCommandInput,
  DeleteContainerImageCommandOutput,
} from "./commands/DeleteContainerImageCommand";
import {
  DeleteContainerServiceCommandInput,
  DeleteContainerServiceCommandOutput,
} from "./commands/DeleteContainerServiceCommand";
import {
  DeleteDiskCommandInput,
  DeleteDiskCommandOutput,
} from "./commands/DeleteDiskCommand";
import {
  DeleteDiskSnapshotCommandInput,
  DeleteDiskSnapshotCommandOutput,
} from "./commands/DeleteDiskSnapshotCommand";
import {
  DeleteDistributionCommandInput,
  DeleteDistributionCommandOutput,
} from "./commands/DeleteDistributionCommand";
import {
  DeleteDomainCommandInput,
  DeleteDomainCommandOutput,
} from "./commands/DeleteDomainCommand";
import {
  DeleteDomainEntryCommandInput,
  DeleteDomainEntryCommandOutput,
} from "./commands/DeleteDomainEntryCommand";
import {
  DeleteInstanceCommandInput,
  DeleteInstanceCommandOutput,
} from "./commands/DeleteInstanceCommand";
import {
  DeleteInstanceSnapshotCommandInput,
  DeleteInstanceSnapshotCommandOutput,
} from "./commands/DeleteInstanceSnapshotCommand";
import {
  DeleteKeyPairCommandInput,
  DeleteKeyPairCommandOutput,
} from "./commands/DeleteKeyPairCommand";
import {
  DeleteKnownHostKeysCommandInput,
  DeleteKnownHostKeysCommandOutput,
} from "./commands/DeleteKnownHostKeysCommand";
import {
  DeleteLoadBalancerCommandInput,
  DeleteLoadBalancerCommandOutput,
} from "./commands/DeleteLoadBalancerCommand";
import {
  DeleteLoadBalancerTlsCertificateCommandInput,
  DeleteLoadBalancerTlsCertificateCommandOutput,
} from "./commands/DeleteLoadBalancerTlsCertificateCommand";
import {
  DeleteRelationalDatabaseCommandInput,
  DeleteRelationalDatabaseCommandOutput,
} from "./commands/DeleteRelationalDatabaseCommand";
import {
  DeleteRelationalDatabaseSnapshotCommandInput,
  DeleteRelationalDatabaseSnapshotCommandOutput,
} from "./commands/DeleteRelationalDatabaseSnapshotCommand";
import {
  DetachCertificateFromDistributionCommandInput,
  DetachCertificateFromDistributionCommandOutput,
} from "./commands/DetachCertificateFromDistributionCommand";
import {
  DetachDiskCommandInput,
  DetachDiskCommandOutput,
} from "./commands/DetachDiskCommand";
import {
  DetachInstancesFromLoadBalancerCommandInput,
  DetachInstancesFromLoadBalancerCommandOutput,
} from "./commands/DetachInstancesFromLoadBalancerCommand";
import {
  DetachStaticIpCommandInput,
  DetachStaticIpCommandOutput,
} from "./commands/DetachStaticIpCommand";
import {
  DisableAddOnCommandInput,
  DisableAddOnCommandOutput,
} from "./commands/DisableAddOnCommand";
import {
  DownloadDefaultKeyPairCommandInput,
  DownloadDefaultKeyPairCommandOutput,
} from "./commands/DownloadDefaultKeyPairCommand";
import {
  EnableAddOnCommandInput,
  EnableAddOnCommandOutput,
} from "./commands/EnableAddOnCommand";
import {
  ExportSnapshotCommandInput,
  ExportSnapshotCommandOutput,
} from "./commands/ExportSnapshotCommand";
import {
  GetActiveNamesCommandInput,
  GetActiveNamesCommandOutput,
} from "./commands/GetActiveNamesCommand";
import {
  GetAlarmsCommandInput,
  GetAlarmsCommandOutput,
} from "./commands/GetAlarmsCommand";
import {
  GetAutoSnapshotsCommandInput,
  GetAutoSnapshotsCommandOutput,
} from "./commands/GetAutoSnapshotsCommand";
import {
  GetBlueprintsCommandInput,
  GetBlueprintsCommandOutput,
} from "./commands/GetBlueprintsCommand";
import {
  GetBucketAccessKeysCommandInput,
  GetBucketAccessKeysCommandOutput,
} from "./commands/GetBucketAccessKeysCommand";
import {
  GetBucketBundlesCommandInput,
  GetBucketBundlesCommandOutput,
} from "./commands/GetBucketBundlesCommand";
import {
  GetBucketMetricDataCommandInput,
  GetBucketMetricDataCommandOutput,
} from "./commands/GetBucketMetricDataCommand";
import {
  GetBucketsCommandInput,
  GetBucketsCommandOutput,
} from "./commands/GetBucketsCommand";
import {
  GetBundlesCommandInput,
  GetBundlesCommandOutput,
} from "./commands/GetBundlesCommand";
import {
  GetCertificatesCommandInput,
  GetCertificatesCommandOutput,
} from "./commands/GetCertificatesCommand";
import {
  GetCloudFormationStackRecordsCommandInput,
  GetCloudFormationStackRecordsCommandOutput,
} from "./commands/GetCloudFormationStackRecordsCommand";
import {
  GetContactMethodsCommandInput,
  GetContactMethodsCommandOutput,
} from "./commands/GetContactMethodsCommand";
import {
  GetContainerAPIMetadataCommandInput,
  GetContainerAPIMetadataCommandOutput,
} from "./commands/GetContainerAPIMetadataCommand";
import {
  GetContainerImagesCommandInput,
  GetContainerImagesCommandOutput,
} from "./commands/GetContainerImagesCommand";
import {
  GetContainerLogCommandInput,
  GetContainerLogCommandOutput,
} from "./commands/GetContainerLogCommand";
import {
  GetContainerServiceDeploymentsCommandInput,
  GetContainerServiceDeploymentsCommandOutput,
} from "./commands/GetContainerServiceDeploymentsCommand";
import {
  GetContainerServiceMetricDataCommandInput,
  GetContainerServiceMetricDataCommandOutput,
} from "./commands/GetContainerServiceMetricDataCommand";
import {
  GetContainerServicePowersCommandInput,
  GetContainerServicePowersCommandOutput,
} from "./commands/GetContainerServicePowersCommand";
import {
  GetContainerServicesCommandInput,
  GetContainerServicesCommandOutput,
} from "./commands/GetContainerServicesCommand";
import {
  GetCostEstimateCommandInput,
  GetCostEstimateCommandOutput,
} from "./commands/GetCostEstimateCommand";
import {
  GetDiskCommandInput,
  GetDiskCommandOutput,
} from "./commands/GetDiskCommand";
import {
  GetDisksCommandInput,
  GetDisksCommandOutput,
} from "./commands/GetDisksCommand";
import {
  GetDiskSnapshotCommandInput,
  GetDiskSnapshotCommandOutput,
} from "./commands/GetDiskSnapshotCommand";
import {
  GetDiskSnapshotsCommandInput,
  GetDiskSnapshotsCommandOutput,
} from "./commands/GetDiskSnapshotsCommand";
import {
  GetDistributionBundlesCommandInput,
  GetDistributionBundlesCommandOutput,
} from "./commands/GetDistributionBundlesCommand";
import {
  GetDistributionLatestCacheResetCommandInput,
  GetDistributionLatestCacheResetCommandOutput,
} from "./commands/GetDistributionLatestCacheResetCommand";
import {
  GetDistributionMetricDataCommandInput,
  GetDistributionMetricDataCommandOutput,
} from "./commands/GetDistributionMetricDataCommand";
import {
  GetDistributionsCommandInput,
  GetDistributionsCommandOutput,
} from "./commands/GetDistributionsCommand";
import {
  GetDomainCommandInput,
  GetDomainCommandOutput,
} from "./commands/GetDomainCommand";
import {
  GetDomainsCommandInput,
  GetDomainsCommandOutput,
} from "./commands/GetDomainsCommand";
import {
  GetExportSnapshotRecordsCommandInput,
  GetExportSnapshotRecordsCommandOutput,
} from "./commands/GetExportSnapshotRecordsCommand";
import {
  GetInstanceAccessDetailsCommandInput,
  GetInstanceAccessDetailsCommandOutput,
} from "./commands/GetInstanceAccessDetailsCommand";
import {
  GetInstanceCommandInput,
  GetInstanceCommandOutput,
} from "./commands/GetInstanceCommand";
import {
  GetInstanceMetricDataCommandInput,
  GetInstanceMetricDataCommandOutput,
} from "./commands/GetInstanceMetricDataCommand";
import {
  GetInstancePortStatesCommandInput,
  GetInstancePortStatesCommandOutput,
} from "./commands/GetInstancePortStatesCommand";
import {
  GetInstancesCommandInput,
  GetInstancesCommandOutput,
} from "./commands/GetInstancesCommand";
import {
  GetInstanceSnapshotCommandInput,
  GetInstanceSnapshotCommandOutput,
} from "./commands/GetInstanceSnapshotCommand";
import {
  GetInstanceSnapshotsCommandInput,
  GetInstanceSnapshotsCommandOutput,
} from "./commands/GetInstanceSnapshotsCommand";
import {
  GetInstanceStateCommandInput,
  GetInstanceStateCommandOutput,
} from "./commands/GetInstanceStateCommand";
import {
  GetKeyPairCommandInput,
  GetKeyPairCommandOutput,
} from "./commands/GetKeyPairCommand";
import {
  GetKeyPairsCommandInput,
  GetKeyPairsCommandOutput,
} from "./commands/GetKeyPairsCommand";
import {
  GetLoadBalancerCommandInput,
  GetLoadBalancerCommandOutput,
} from "./commands/GetLoadBalancerCommand";
import {
  GetLoadBalancerMetricDataCommandInput,
  GetLoadBalancerMetricDataCommandOutput,
} from "./commands/GetLoadBalancerMetricDataCommand";
import {
  GetLoadBalancersCommandInput,
  GetLoadBalancersCommandOutput,
} from "./commands/GetLoadBalancersCommand";
import {
  GetLoadBalancerTlsCertificatesCommandInput,
  GetLoadBalancerTlsCertificatesCommandOutput,
} from "./commands/GetLoadBalancerTlsCertificatesCommand";
import {
  GetLoadBalancerTlsPoliciesCommandInput,
  GetLoadBalancerTlsPoliciesCommandOutput,
} from "./commands/GetLoadBalancerTlsPoliciesCommand";
import {
  GetOperationCommandInput,
  GetOperationCommandOutput,
} from "./commands/GetOperationCommand";
import {
  GetOperationsCommandInput,
  GetOperationsCommandOutput,
} from "./commands/GetOperationsCommand";
import {
  GetOperationsForResourceCommandInput,
  GetOperationsForResourceCommandOutput,
} from "./commands/GetOperationsForResourceCommand";
import {
  GetRegionsCommandInput,
  GetRegionsCommandOutput,
} from "./commands/GetRegionsCommand";
import {
  GetRelationalDatabaseBlueprintsCommandInput,
  GetRelationalDatabaseBlueprintsCommandOutput,
} from "./commands/GetRelationalDatabaseBlueprintsCommand";
import {
  GetRelationalDatabaseBundlesCommandInput,
  GetRelationalDatabaseBundlesCommandOutput,
} from "./commands/GetRelationalDatabaseBundlesCommand";
import {
  GetRelationalDatabaseCommandInput,
  GetRelationalDatabaseCommandOutput,
} from "./commands/GetRelationalDatabaseCommand";
import {
  GetRelationalDatabaseEventsCommandInput,
  GetRelationalDatabaseEventsCommandOutput,
} from "./commands/GetRelationalDatabaseEventsCommand";
import {
  GetRelationalDatabaseLogEventsCommandInput,
  GetRelationalDatabaseLogEventsCommandOutput,
} from "./commands/GetRelationalDatabaseLogEventsCommand";
import {
  GetRelationalDatabaseLogStreamsCommandInput,
  GetRelationalDatabaseLogStreamsCommandOutput,
} from "./commands/GetRelationalDatabaseLogStreamsCommand";
import {
  GetRelationalDatabaseMasterUserPasswordCommandInput,
  GetRelationalDatabaseMasterUserPasswordCommandOutput,
} from "./commands/GetRelationalDatabaseMasterUserPasswordCommand";
import {
  GetRelationalDatabaseMetricDataCommandInput,
  GetRelationalDatabaseMetricDataCommandOutput,
} from "./commands/GetRelationalDatabaseMetricDataCommand";
import {
  GetRelationalDatabaseParametersCommandInput,
  GetRelationalDatabaseParametersCommandOutput,
} from "./commands/GetRelationalDatabaseParametersCommand";
import {
  GetRelationalDatabasesCommandInput,
  GetRelationalDatabasesCommandOutput,
} from "./commands/GetRelationalDatabasesCommand";
import {
  GetRelationalDatabaseSnapshotCommandInput,
  GetRelationalDatabaseSnapshotCommandOutput,
} from "./commands/GetRelationalDatabaseSnapshotCommand";
import {
  GetRelationalDatabaseSnapshotsCommandInput,
  GetRelationalDatabaseSnapshotsCommandOutput,
} from "./commands/GetRelationalDatabaseSnapshotsCommand";
import {
  GetStaticIpCommandInput,
  GetStaticIpCommandOutput,
} from "./commands/GetStaticIpCommand";
import {
  GetStaticIpsCommandInput,
  GetStaticIpsCommandOutput,
} from "./commands/GetStaticIpsCommand";
import {
  ImportKeyPairCommandInput,
  ImportKeyPairCommandOutput,
} from "./commands/ImportKeyPairCommand";
import {
  IsVpcPeeredCommandInput,
  IsVpcPeeredCommandOutput,
} from "./commands/IsVpcPeeredCommand";
import {
  OpenInstancePublicPortsCommandInput,
  OpenInstancePublicPortsCommandOutput,
} from "./commands/OpenInstancePublicPortsCommand";
import {
  PeerVpcCommandInput,
  PeerVpcCommandOutput,
} from "./commands/PeerVpcCommand";
import {
  PutAlarmCommandInput,
  PutAlarmCommandOutput,
} from "./commands/PutAlarmCommand";
import {
  PutInstancePublicPortsCommandInput,
  PutInstancePublicPortsCommandOutput,
} from "./commands/PutInstancePublicPortsCommand";
import {
  RebootInstanceCommandInput,
  RebootInstanceCommandOutput,
} from "./commands/RebootInstanceCommand";
import {
  RebootRelationalDatabaseCommandInput,
  RebootRelationalDatabaseCommandOutput,
} from "./commands/RebootRelationalDatabaseCommand";
import {
  RegisterContainerImageCommandInput,
  RegisterContainerImageCommandOutput,
} from "./commands/RegisterContainerImageCommand";
import {
  ReleaseStaticIpCommandInput,
  ReleaseStaticIpCommandOutput,
} from "./commands/ReleaseStaticIpCommand";
import {
  ResetDistributionCacheCommandInput,
  ResetDistributionCacheCommandOutput,
} from "./commands/ResetDistributionCacheCommand";
import {
  SendContactMethodVerificationCommandInput,
  SendContactMethodVerificationCommandOutput,
} from "./commands/SendContactMethodVerificationCommand";
import {
  SetIpAddressTypeCommandInput,
  SetIpAddressTypeCommandOutput,
} from "./commands/SetIpAddressTypeCommand";
import {
  SetResourceAccessForBucketCommandInput,
  SetResourceAccessForBucketCommandOutput,
} from "./commands/SetResourceAccessForBucketCommand";
import {
  StartGUISessionCommandInput,
  StartGUISessionCommandOutput,
} from "./commands/StartGUISessionCommand";
import {
  StartInstanceCommandInput,
  StartInstanceCommandOutput,
} from "./commands/StartInstanceCommand";
import {
  StartRelationalDatabaseCommandInput,
  StartRelationalDatabaseCommandOutput,
} from "./commands/StartRelationalDatabaseCommand";
import {
  StopGUISessionCommandInput,
  StopGUISessionCommandOutput,
} from "./commands/StopGUISessionCommand";
import {
  StopInstanceCommandInput,
  StopInstanceCommandOutput,
} from "./commands/StopInstanceCommand";
import {
  StopRelationalDatabaseCommandInput,
  StopRelationalDatabaseCommandOutput,
} from "./commands/StopRelationalDatabaseCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  TestAlarmCommandInput,
  TestAlarmCommandOutput,
} from "./commands/TestAlarmCommand";
import {
  UnpeerVpcCommandInput,
  UnpeerVpcCommandOutput,
} from "./commands/UnpeerVpcCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateBucketBundleCommandInput,
  UpdateBucketBundleCommandOutput,
} from "./commands/UpdateBucketBundleCommand";
import {
  UpdateBucketCommandInput,
  UpdateBucketCommandOutput,
} from "./commands/UpdateBucketCommand";
import {
  UpdateContainerServiceCommandInput,
  UpdateContainerServiceCommandOutput,
} from "./commands/UpdateContainerServiceCommand";
import {
  UpdateDistributionBundleCommandInput,
  UpdateDistributionBundleCommandOutput,
} from "./commands/UpdateDistributionBundleCommand";
import {
  UpdateDistributionCommandInput,
  UpdateDistributionCommandOutput,
} from "./commands/UpdateDistributionCommand";
import {
  UpdateDomainEntryCommandInput,
  UpdateDomainEntryCommandOutput,
} from "./commands/UpdateDomainEntryCommand";
import {
  UpdateInstanceMetadataOptionsCommandInput,
  UpdateInstanceMetadataOptionsCommandOutput,
} from "./commands/UpdateInstanceMetadataOptionsCommand";
import {
  UpdateLoadBalancerAttributeCommandInput,
  UpdateLoadBalancerAttributeCommandOutput,
} from "./commands/UpdateLoadBalancerAttributeCommand";
import {
  UpdateRelationalDatabaseCommandInput,
  UpdateRelationalDatabaseCommandOutput,
} from "./commands/UpdateRelationalDatabaseCommand";
import {
  UpdateRelationalDatabaseParametersCommandInput,
  UpdateRelationalDatabaseParametersCommandOutput,
} from "./commands/UpdateRelationalDatabaseParametersCommand";
import { LightsailClient } from "./LightsailClient";
export declare class Lightsail extends LightsailClient {
  allocateStaticIp(
    args: AllocateStaticIpCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AllocateStaticIpCommandOutput>;
  allocateStaticIp(
    args: AllocateStaticIpCommandInput,
    cb: (err: any, data?: AllocateStaticIpCommandOutput) => void
  ): void;
  allocateStaticIp(
    args: AllocateStaticIpCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AllocateStaticIpCommandOutput) => void
  ): void;
  attachCertificateToDistribution(
    args: AttachCertificateToDistributionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AttachCertificateToDistributionCommandOutput>;
  attachCertificateToDistribution(
    args: AttachCertificateToDistributionCommandInput,
    cb: (err: any, data?: AttachCertificateToDistributionCommandOutput) => void
  ): void;
  attachCertificateToDistribution(
    args: AttachCertificateToDistributionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AttachCertificateToDistributionCommandOutput) => void
  ): void;
  attachDisk(
    args: AttachDiskCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AttachDiskCommandOutput>;
  attachDisk(
    args: AttachDiskCommandInput,
    cb: (err: any, data?: AttachDiskCommandOutput) => void
  ): void;
  attachDisk(
    args: AttachDiskCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AttachDiskCommandOutput) => void
  ): void;
  attachInstancesToLoadBalancer(
    args: AttachInstancesToLoadBalancerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AttachInstancesToLoadBalancerCommandOutput>;
  attachInstancesToLoadBalancer(
    args: AttachInstancesToLoadBalancerCommandInput,
    cb: (err: any, data?: AttachInstancesToLoadBalancerCommandOutput) => void
  ): void;
  attachInstancesToLoadBalancer(
    args: AttachInstancesToLoadBalancerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AttachInstancesToLoadBalancerCommandOutput) => void
  ): void;
  attachLoadBalancerTlsCertificate(
    args: AttachLoadBalancerTlsCertificateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AttachLoadBalancerTlsCertificateCommandOutput>;
  attachLoadBalancerTlsCertificate(
    args: AttachLoadBalancerTlsCertificateCommandInput,
    cb: (err: any, data?: AttachLoadBalancerTlsCertificateCommandOutput) => void
  ): void;
  attachLoadBalancerTlsCertificate(
    args: AttachLoadBalancerTlsCertificateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AttachLoadBalancerTlsCertificateCommandOutput) => void
  ): void;
  attachStaticIp(
    args: AttachStaticIpCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AttachStaticIpCommandOutput>;
  attachStaticIp(
    args: AttachStaticIpCommandInput,
    cb: (err: any, data?: AttachStaticIpCommandOutput) => void
  ): void;
  attachStaticIp(
    args: AttachStaticIpCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AttachStaticIpCommandOutput) => void
  ): void;
  closeInstancePublicPorts(
    args: CloseInstancePublicPortsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CloseInstancePublicPortsCommandOutput>;
  closeInstancePublicPorts(
    args: CloseInstancePublicPortsCommandInput,
    cb: (err: any, data?: CloseInstancePublicPortsCommandOutput) => void
  ): void;
  closeInstancePublicPorts(
    args: CloseInstancePublicPortsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CloseInstancePublicPortsCommandOutput) => void
  ): void;
  copySnapshot(
    args: CopySnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CopySnapshotCommandOutput>;
  copySnapshot(
    args: CopySnapshotCommandInput,
    cb: (err: any, data?: CopySnapshotCommandOutput) => void
  ): void;
  copySnapshot(
    args: CopySnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CopySnapshotCommandOutput) => void
  ): void;
  createBucket(
    args: CreateBucketCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateBucketCommandOutput>;
  createBucket(
    args: CreateBucketCommandInput,
    cb: (err: any, data?: CreateBucketCommandOutput) => void
  ): void;
  createBucket(
    args: CreateBucketCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateBucketCommandOutput) => void
  ): void;
  createBucketAccessKey(
    args: CreateBucketAccessKeyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateBucketAccessKeyCommandOutput>;
  createBucketAccessKey(
    args: CreateBucketAccessKeyCommandInput,
    cb: (err: any, data?: CreateBucketAccessKeyCommandOutput) => void
  ): void;
  createBucketAccessKey(
    args: CreateBucketAccessKeyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateBucketAccessKeyCommandOutput) => void
  ): void;
  createCertificate(
    args: CreateCertificateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateCertificateCommandOutput>;
  createCertificate(
    args: CreateCertificateCommandInput,
    cb: (err: any, data?: CreateCertificateCommandOutput) => void
  ): void;
  createCertificate(
    args: CreateCertificateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateCertificateCommandOutput) => void
  ): void;
  createCloudFormationStack(
    args: CreateCloudFormationStackCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateCloudFormationStackCommandOutput>;
  createCloudFormationStack(
    args: CreateCloudFormationStackCommandInput,
    cb: (err: any, data?: CreateCloudFormationStackCommandOutput) => void
  ): void;
  createCloudFormationStack(
    args: CreateCloudFormationStackCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateCloudFormationStackCommandOutput) => void
  ): void;
  createContactMethod(
    args: CreateContactMethodCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateContactMethodCommandOutput>;
  createContactMethod(
    args: CreateContactMethodCommandInput,
    cb: (err: any, data?: CreateContactMethodCommandOutput) => void
  ): void;
  createContactMethod(
    args: CreateContactMethodCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateContactMethodCommandOutput) => void
  ): void;
  createContainerService(
    args: CreateContainerServiceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateContainerServiceCommandOutput>;
  createContainerService(
    args: CreateContainerServiceCommandInput,
    cb: (err: any, data?: CreateContainerServiceCommandOutput) => void
  ): void;
  createContainerService(
    args: CreateContainerServiceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateContainerServiceCommandOutput) => void
  ): void;
  createContainerServiceDeployment(
    args: CreateContainerServiceDeploymentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateContainerServiceDeploymentCommandOutput>;
  createContainerServiceDeployment(
    args: CreateContainerServiceDeploymentCommandInput,
    cb: (err: any, data?: CreateContainerServiceDeploymentCommandOutput) => void
  ): void;
  createContainerServiceDeployment(
    args: CreateContainerServiceDeploymentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateContainerServiceDeploymentCommandOutput) => void
  ): void;
  createContainerServiceRegistryLogin(
    args: CreateContainerServiceRegistryLoginCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateContainerServiceRegistryLoginCommandOutput>;
  createContainerServiceRegistryLogin(
    args: CreateContainerServiceRegistryLoginCommandInput,
    cb: (
      err: any,
      data?: CreateContainerServiceRegistryLoginCommandOutput
    ) => void
  ): void;
  createContainerServiceRegistryLogin(
    args: CreateContainerServiceRegistryLoginCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: CreateContainerServiceRegistryLoginCommandOutput
    ) => void
  ): void;
  createDisk(
    args: CreateDiskCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDiskCommandOutput>;
  createDisk(
    args: CreateDiskCommandInput,
    cb: (err: any, data?: CreateDiskCommandOutput) => void
  ): void;
  createDisk(
    args: CreateDiskCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDiskCommandOutput) => void
  ): void;
  createDiskFromSnapshot(
    args: CreateDiskFromSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDiskFromSnapshotCommandOutput>;
  createDiskFromSnapshot(
    args: CreateDiskFromSnapshotCommandInput,
    cb: (err: any, data?: CreateDiskFromSnapshotCommandOutput) => void
  ): void;
  createDiskFromSnapshot(
    args: CreateDiskFromSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDiskFromSnapshotCommandOutput) => void
  ): void;
  createDiskSnapshot(
    args: CreateDiskSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDiskSnapshotCommandOutput>;
  createDiskSnapshot(
    args: CreateDiskSnapshotCommandInput,
    cb: (err: any, data?: CreateDiskSnapshotCommandOutput) => void
  ): void;
  createDiskSnapshot(
    args: CreateDiskSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDiskSnapshotCommandOutput) => void
  ): void;
  createDistribution(
    args: CreateDistributionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDistributionCommandOutput>;
  createDistribution(
    args: CreateDistributionCommandInput,
    cb: (err: any, data?: CreateDistributionCommandOutput) => void
  ): void;
  createDistribution(
    args: CreateDistributionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDistributionCommandOutput) => void
  ): void;
  createDomain(
    args: CreateDomainCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDomainCommandOutput>;
  createDomain(
    args: CreateDomainCommandInput,
    cb: (err: any, data?: CreateDomainCommandOutput) => void
  ): void;
  createDomain(
    args: CreateDomainCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDomainCommandOutput) => void
  ): void;
  createDomainEntry(
    args: CreateDomainEntryCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDomainEntryCommandOutput>;
  createDomainEntry(
    args: CreateDomainEntryCommandInput,
    cb: (err: any, data?: CreateDomainEntryCommandOutput) => void
  ): void;
  createDomainEntry(
    args: CreateDomainEntryCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDomainEntryCommandOutput) => void
  ): void;
  createGUISessionAccessDetails(
    args: CreateGUISessionAccessDetailsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateGUISessionAccessDetailsCommandOutput>;
  createGUISessionAccessDetails(
    args: CreateGUISessionAccessDetailsCommandInput,
    cb: (err: any, data?: CreateGUISessionAccessDetailsCommandOutput) => void
  ): void;
  createGUISessionAccessDetails(
    args: CreateGUISessionAccessDetailsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateGUISessionAccessDetailsCommandOutput) => void
  ): void;
  createInstances(
    args: CreateInstancesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateInstancesCommandOutput>;
  createInstances(
    args: CreateInstancesCommandInput,
    cb: (err: any, data?: CreateInstancesCommandOutput) => void
  ): void;
  createInstances(
    args: CreateInstancesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateInstancesCommandOutput) => void
  ): void;
  createInstancesFromSnapshot(
    args: CreateInstancesFromSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateInstancesFromSnapshotCommandOutput>;
  createInstancesFromSnapshot(
    args: CreateInstancesFromSnapshotCommandInput,
    cb: (err: any, data?: CreateInstancesFromSnapshotCommandOutput) => void
  ): void;
  createInstancesFromSnapshot(
    args: CreateInstancesFromSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateInstancesFromSnapshotCommandOutput) => void
  ): void;
  createInstanceSnapshot(
    args: CreateInstanceSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateInstanceSnapshotCommandOutput>;
  createInstanceSnapshot(
    args: CreateInstanceSnapshotCommandInput,
    cb: (err: any, data?: CreateInstanceSnapshotCommandOutput) => void
  ): void;
  createInstanceSnapshot(
    args: CreateInstanceSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateInstanceSnapshotCommandOutput) => void
  ): void;
  createKeyPair(
    args: CreateKeyPairCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateKeyPairCommandOutput>;
  createKeyPair(
    args: CreateKeyPairCommandInput,
    cb: (err: any, data?: CreateKeyPairCommandOutput) => void
  ): void;
  createKeyPair(
    args: CreateKeyPairCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateKeyPairCommandOutput) => void
  ): void;
  createLoadBalancer(
    args: CreateLoadBalancerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateLoadBalancerCommandOutput>;
  createLoadBalancer(
    args: CreateLoadBalancerCommandInput,
    cb: (err: any, data?: CreateLoadBalancerCommandOutput) => void
  ): void;
  createLoadBalancer(
    args: CreateLoadBalancerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateLoadBalancerCommandOutput) => void
  ): void;
  createLoadBalancerTlsCertificate(
    args: CreateLoadBalancerTlsCertificateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateLoadBalancerTlsCertificateCommandOutput>;
  createLoadBalancerTlsCertificate(
    args: CreateLoadBalancerTlsCertificateCommandInput,
    cb: (err: any, data?: CreateLoadBalancerTlsCertificateCommandOutput) => void
  ): void;
  createLoadBalancerTlsCertificate(
    args: CreateLoadBalancerTlsCertificateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateLoadBalancerTlsCertificateCommandOutput) => void
  ): void;
  createRelationalDatabase(
    args: CreateRelationalDatabaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRelationalDatabaseCommandOutput>;
  createRelationalDatabase(
    args: CreateRelationalDatabaseCommandInput,
    cb: (err: any, data?: CreateRelationalDatabaseCommandOutput) => void
  ): void;
  createRelationalDatabase(
    args: CreateRelationalDatabaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateRelationalDatabaseCommandOutput) => void
  ): void;
  createRelationalDatabaseFromSnapshot(
    args: CreateRelationalDatabaseFromSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRelationalDatabaseFromSnapshotCommandOutput>;
  createRelationalDatabaseFromSnapshot(
    args: CreateRelationalDatabaseFromSnapshotCommandInput,
    cb: (
      err: any,
      data?: CreateRelationalDatabaseFromSnapshotCommandOutput
    ) => void
  ): void;
  createRelationalDatabaseFromSnapshot(
    args: CreateRelationalDatabaseFromSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: CreateRelationalDatabaseFromSnapshotCommandOutput
    ) => void
  ): void;
  createRelationalDatabaseSnapshot(
    args: CreateRelationalDatabaseSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateRelationalDatabaseSnapshotCommandOutput>;
  createRelationalDatabaseSnapshot(
    args: CreateRelationalDatabaseSnapshotCommandInput,
    cb: (err: any, data?: CreateRelationalDatabaseSnapshotCommandOutput) => void
  ): void;
  createRelationalDatabaseSnapshot(
    args: CreateRelationalDatabaseSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateRelationalDatabaseSnapshotCommandOutput) => void
  ): void;
  deleteAlarm(
    args: DeleteAlarmCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteAlarmCommandOutput>;
  deleteAlarm(
    args: DeleteAlarmCommandInput,
    cb: (err: any, data?: DeleteAlarmCommandOutput) => void
  ): void;
  deleteAlarm(
    args: DeleteAlarmCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteAlarmCommandOutput) => void
  ): void;
  deleteAutoSnapshot(
    args: DeleteAutoSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteAutoSnapshotCommandOutput>;
  deleteAutoSnapshot(
    args: DeleteAutoSnapshotCommandInput,
    cb: (err: any, data?: DeleteAutoSnapshotCommandOutput) => void
  ): void;
  deleteAutoSnapshot(
    args: DeleteAutoSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteAutoSnapshotCommandOutput) => void
  ): void;
  deleteBucket(
    args: DeleteBucketCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteBucketCommandOutput>;
  deleteBucket(
    args: DeleteBucketCommandInput,
    cb: (err: any, data?: DeleteBucketCommandOutput) => void
  ): void;
  deleteBucket(
    args: DeleteBucketCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteBucketCommandOutput) => void
  ): void;
  deleteBucketAccessKey(
    args: DeleteBucketAccessKeyCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteBucketAccessKeyCommandOutput>;
  deleteBucketAccessKey(
    args: DeleteBucketAccessKeyCommandInput,
    cb: (err: any, data?: DeleteBucketAccessKeyCommandOutput) => void
  ): void;
  deleteBucketAccessKey(
    args: DeleteBucketAccessKeyCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteBucketAccessKeyCommandOutput) => void
  ): void;
  deleteCertificate(
    args: DeleteCertificateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteCertificateCommandOutput>;
  deleteCertificate(
    args: DeleteCertificateCommandInput,
    cb: (err: any, data?: DeleteCertificateCommandOutput) => void
  ): void;
  deleteCertificate(
    args: DeleteCertificateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteCertificateCommandOutput) => void
  ): void;
  deleteContactMethod(
    args: DeleteContactMethodCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteContactMethodCommandOutput>;
  deleteContactMethod(
    args: DeleteContactMethodCommandInput,
    cb: (err: any, data?: DeleteContactMethodCommandOutput) => void
  ): void;
  deleteContactMethod(
    args: DeleteContactMethodCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteContactMethodCommandOutput) => void
  ): void;
  deleteContainerImage(
    args: DeleteContainerImageCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteContainerImageCommandOutput>;
  deleteContainerImage(
    args: DeleteContainerImageCommandInput,
    cb: (err: any, data?: DeleteContainerImageCommandOutput) => void
  ): void;
  deleteContainerImage(
    args: DeleteContainerImageCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteContainerImageCommandOutput) => void
  ): void;
  deleteContainerService(
    args: DeleteContainerServiceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteContainerServiceCommandOutput>;
  deleteContainerService(
    args: DeleteContainerServiceCommandInput,
    cb: (err: any, data?: DeleteContainerServiceCommandOutput) => void
  ): void;
  deleteContainerService(
    args: DeleteContainerServiceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteContainerServiceCommandOutput) => void
  ): void;
  deleteDisk(
    args: DeleteDiskCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDiskCommandOutput>;
  deleteDisk(
    args: DeleteDiskCommandInput,
    cb: (err: any, data?: DeleteDiskCommandOutput) => void
  ): void;
  deleteDisk(
    args: DeleteDiskCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDiskCommandOutput) => void
  ): void;
  deleteDiskSnapshot(
    args: DeleteDiskSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDiskSnapshotCommandOutput>;
  deleteDiskSnapshot(
    args: DeleteDiskSnapshotCommandInput,
    cb: (err: any, data?: DeleteDiskSnapshotCommandOutput) => void
  ): void;
  deleteDiskSnapshot(
    args: DeleteDiskSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDiskSnapshotCommandOutput) => void
  ): void;
  deleteDistribution(
    args: DeleteDistributionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDistributionCommandOutput>;
  deleteDistribution(
    args: DeleteDistributionCommandInput,
    cb: (err: any, data?: DeleteDistributionCommandOutput) => void
  ): void;
  deleteDistribution(
    args: DeleteDistributionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDistributionCommandOutput) => void
  ): void;
  deleteDomain(
    args: DeleteDomainCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDomainCommandOutput>;
  deleteDomain(
    args: DeleteDomainCommandInput,
    cb: (err: any, data?: DeleteDomainCommandOutput) => void
  ): void;
  deleteDomain(
    args: DeleteDomainCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDomainCommandOutput) => void
  ): void;
  deleteDomainEntry(
    args: DeleteDomainEntryCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDomainEntryCommandOutput>;
  deleteDomainEntry(
    args: DeleteDomainEntryCommandInput,
    cb: (err: any, data?: DeleteDomainEntryCommandOutput) => void
  ): void;
  deleteDomainEntry(
    args: DeleteDomainEntryCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDomainEntryCommandOutput) => void
  ): void;
  deleteInstance(
    args: DeleteInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteInstanceCommandOutput>;
  deleteInstance(
    args: DeleteInstanceCommandInput,
    cb: (err: any, data?: DeleteInstanceCommandOutput) => void
  ): void;
  deleteInstance(
    args: DeleteInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteInstanceCommandOutput) => void
  ): void;
  deleteInstanceSnapshot(
    args: DeleteInstanceSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteInstanceSnapshotCommandOutput>;
  deleteInstanceSnapshot(
    args: DeleteInstanceSnapshotCommandInput,
    cb: (err: any, data?: DeleteInstanceSnapshotCommandOutput) => void
  ): void;
  deleteInstanceSnapshot(
    args: DeleteInstanceSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteInstanceSnapshotCommandOutput) => void
  ): void;
  deleteKeyPair(
    args: DeleteKeyPairCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteKeyPairCommandOutput>;
  deleteKeyPair(
    args: DeleteKeyPairCommandInput,
    cb: (err: any, data?: DeleteKeyPairCommandOutput) => void
  ): void;
  deleteKeyPair(
    args: DeleteKeyPairCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteKeyPairCommandOutput) => void
  ): void;
  deleteKnownHostKeys(
    args: DeleteKnownHostKeysCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteKnownHostKeysCommandOutput>;
  deleteKnownHostKeys(
    args: DeleteKnownHostKeysCommandInput,
    cb: (err: any, data?: DeleteKnownHostKeysCommandOutput) => void
  ): void;
  deleteKnownHostKeys(
    args: DeleteKnownHostKeysCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteKnownHostKeysCommandOutput) => void
  ): void;
  deleteLoadBalancer(
    args: DeleteLoadBalancerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteLoadBalancerCommandOutput>;
  deleteLoadBalancer(
    args: DeleteLoadBalancerCommandInput,
    cb: (err: any, data?: DeleteLoadBalancerCommandOutput) => void
  ): void;
  deleteLoadBalancer(
    args: DeleteLoadBalancerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteLoadBalancerCommandOutput) => void
  ): void;
  deleteLoadBalancerTlsCertificate(
    args: DeleteLoadBalancerTlsCertificateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteLoadBalancerTlsCertificateCommandOutput>;
  deleteLoadBalancerTlsCertificate(
    args: DeleteLoadBalancerTlsCertificateCommandInput,
    cb: (err: any, data?: DeleteLoadBalancerTlsCertificateCommandOutput) => void
  ): void;
  deleteLoadBalancerTlsCertificate(
    args: DeleteLoadBalancerTlsCertificateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteLoadBalancerTlsCertificateCommandOutput) => void
  ): void;
  deleteRelationalDatabase(
    args: DeleteRelationalDatabaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteRelationalDatabaseCommandOutput>;
  deleteRelationalDatabase(
    args: DeleteRelationalDatabaseCommandInput,
    cb: (err: any, data?: DeleteRelationalDatabaseCommandOutput) => void
  ): void;
  deleteRelationalDatabase(
    args: DeleteRelationalDatabaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteRelationalDatabaseCommandOutput) => void
  ): void;
  deleteRelationalDatabaseSnapshot(
    args: DeleteRelationalDatabaseSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteRelationalDatabaseSnapshotCommandOutput>;
  deleteRelationalDatabaseSnapshot(
    args: DeleteRelationalDatabaseSnapshotCommandInput,
    cb: (err: any, data?: DeleteRelationalDatabaseSnapshotCommandOutput) => void
  ): void;
  deleteRelationalDatabaseSnapshot(
    args: DeleteRelationalDatabaseSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteRelationalDatabaseSnapshotCommandOutput) => void
  ): void;
  detachCertificateFromDistribution(
    args: DetachCertificateFromDistributionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DetachCertificateFromDistributionCommandOutput>;
  detachCertificateFromDistribution(
    args: DetachCertificateFromDistributionCommandInput,
    cb: (
      err: any,
      data?: DetachCertificateFromDistributionCommandOutput
    ) => void
  ): void;
  detachCertificateFromDistribution(
    args: DetachCertificateFromDistributionCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DetachCertificateFromDistributionCommandOutput
    ) => void
  ): void;
  detachDisk(
    args: DetachDiskCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DetachDiskCommandOutput>;
  detachDisk(
    args: DetachDiskCommandInput,
    cb: (err: any, data?: DetachDiskCommandOutput) => void
  ): void;
  detachDisk(
    args: DetachDiskCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DetachDiskCommandOutput) => void
  ): void;
  detachInstancesFromLoadBalancer(
    args: DetachInstancesFromLoadBalancerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DetachInstancesFromLoadBalancerCommandOutput>;
  detachInstancesFromLoadBalancer(
    args: DetachInstancesFromLoadBalancerCommandInput,
    cb: (err: any, data?: DetachInstancesFromLoadBalancerCommandOutput) => void
  ): void;
  detachInstancesFromLoadBalancer(
    args: DetachInstancesFromLoadBalancerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DetachInstancesFromLoadBalancerCommandOutput) => void
  ): void;
  detachStaticIp(
    args: DetachStaticIpCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DetachStaticIpCommandOutput>;
  detachStaticIp(
    args: DetachStaticIpCommandInput,
    cb: (err: any, data?: DetachStaticIpCommandOutput) => void
  ): void;
  detachStaticIp(
    args: DetachStaticIpCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DetachStaticIpCommandOutput) => void
  ): void;
  disableAddOn(
    args: DisableAddOnCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisableAddOnCommandOutput>;
  disableAddOn(
    args: DisableAddOnCommandInput,
    cb: (err: any, data?: DisableAddOnCommandOutput) => void
  ): void;
  disableAddOn(
    args: DisableAddOnCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DisableAddOnCommandOutput) => void
  ): void;
  downloadDefaultKeyPair(
    args: DownloadDefaultKeyPairCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DownloadDefaultKeyPairCommandOutput>;
  downloadDefaultKeyPair(
    args: DownloadDefaultKeyPairCommandInput,
    cb: (err: any, data?: DownloadDefaultKeyPairCommandOutput) => void
  ): void;
  downloadDefaultKeyPair(
    args: DownloadDefaultKeyPairCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DownloadDefaultKeyPairCommandOutput) => void
  ): void;
  enableAddOn(
    args: EnableAddOnCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<EnableAddOnCommandOutput>;
  enableAddOn(
    args: EnableAddOnCommandInput,
    cb: (err: any, data?: EnableAddOnCommandOutput) => void
  ): void;
  enableAddOn(
    args: EnableAddOnCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: EnableAddOnCommandOutput) => void
  ): void;
  exportSnapshot(
    args: ExportSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ExportSnapshotCommandOutput>;
  exportSnapshot(
    args: ExportSnapshotCommandInput,
    cb: (err: any, data?: ExportSnapshotCommandOutput) => void
  ): void;
  exportSnapshot(
    args: ExportSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ExportSnapshotCommandOutput) => void
  ): void;
  getActiveNames(
    args: GetActiveNamesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetActiveNamesCommandOutput>;
  getActiveNames(
    args: GetActiveNamesCommandInput,
    cb: (err: any, data?: GetActiveNamesCommandOutput) => void
  ): void;
  getActiveNames(
    args: GetActiveNamesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetActiveNamesCommandOutput) => void
  ): void;
  getAlarms(
    args: GetAlarmsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetAlarmsCommandOutput>;
  getAlarms(
    args: GetAlarmsCommandInput,
    cb: (err: any, data?: GetAlarmsCommandOutput) => void
  ): void;
  getAlarms(
    args: GetAlarmsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetAlarmsCommandOutput) => void
  ): void;
  getAutoSnapshots(
    args: GetAutoSnapshotsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetAutoSnapshotsCommandOutput>;
  getAutoSnapshots(
    args: GetAutoSnapshotsCommandInput,
    cb: (err: any, data?: GetAutoSnapshotsCommandOutput) => void
  ): void;
  getAutoSnapshots(
    args: GetAutoSnapshotsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetAutoSnapshotsCommandOutput) => void
  ): void;
  getBlueprints(
    args: GetBlueprintsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetBlueprintsCommandOutput>;
  getBlueprints(
    args: GetBlueprintsCommandInput,
    cb: (err: any, data?: GetBlueprintsCommandOutput) => void
  ): void;
  getBlueprints(
    args: GetBlueprintsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetBlueprintsCommandOutput) => void
  ): void;
  getBucketAccessKeys(
    args: GetBucketAccessKeysCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetBucketAccessKeysCommandOutput>;
  getBucketAccessKeys(
    args: GetBucketAccessKeysCommandInput,
    cb: (err: any, data?: GetBucketAccessKeysCommandOutput) => void
  ): void;
  getBucketAccessKeys(
    args: GetBucketAccessKeysCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetBucketAccessKeysCommandOutput) => void
  ): void;
  getBucketBundles(
    args: GetBucketBundlesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetBucketBundlesCommandOutput>;
  getBucketBundles(
    args: GetBucketBundlesCommandInput,
    cb: (err: any, data?: GetBucketBundlesCommandOutput) => void
  ): void;
  getBucketBundles(
    args: GetBucketBundlesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetBucketBundlesCommandOutput) => void
  ): void;
  getBucketMetricData(
    args: GetBucketMetricDataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetBucketMetricDataCommandOutput>;
  getBucketMetricData(
    args: GetBucketMetricDataCommandInput,
    cb: (err: any, data?: GetBucketMetricDataCommandOutput) => void
  ): void;
  getBucketMetricData(
    args: GetBucketMetricDataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetBucketMetricDataCommandOutput) => void
  ): void;
  getBuckets(
    args: GetBucketsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetBucketsCommandOutput>;
  getBuckets(
    args: GetBucketsCommandInput,
    cb: (err: any, data?: GetBucketsCommandOutput) => void
  ): void;
  getBuckets(
    args: GetBucketsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetBucketsCommandOutput) => void
  ): void;
  getBundles(
    args: GetBundlesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetBundlesCommandOutput>;
  getBundles(
    args: GetBundlesCommandInput,
    cb: (err: any, data?: GetBundlesCommandOutput) => void
  ): void;
  getBundles(
    args: GetBundlesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetBundlesCommandOutput) => void
  ): void;
  getCertificates(
    args: GetCertificatesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetCertificatesCommandOutput>;
  getCertificates(
    args: GetCertificatesCommandInput,
    cb: (err: any, data?: GetCertificatesCommandOutput) => void
  ): void;
  getCertificates(
    args: GetCertificatesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetCertificatesCommandOutput) => void
  ): void;
  getCloudFormationStackRecords(
    args: GetCloudFormationStackRecordsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetCloudFormationStackRecordsCommandOutput>;
  getCloudFormationStackRecords(
    args: GetCloudFormationStackRecordsCommandInput,
    cb: (err: any, data?: GetCloudFormationStackRecordsCommandOutput) => void
  ): void;
  getCloudFormationStackRecords(
    args: GetCloudFormationStackRecordsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetCloudFormationStackRecordsCommandOutput) => void
  ): void;
  getContactMethods(
    args: GetContactMethodsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetContactMethodsCommandOutput>;
  getContactMethods(
    args: GetContactMethodsCommandInput,
    cb: (err: any, data?: GetContactMethodsCommandOutput) => void
  ): void;
  getContactMethods(
    args: GetContactMethodsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetContactMethodsCommandOutput) => void
  ): void;
  getContainerAPIMetadata(
    args: GetContainerAPIMetadataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetContainerAPIMetadataCommandOutput>;
  getContainerAPIMetadata(
    args: GetContainerAPIMetadataCommandInput,
    cb: (err: any, data?: GetContainerAPIMetadataCommandOutput) => void
  ): void;
  getContainerAPIMetadata(
    args: GetContainerAPIMetadataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetContainerAPIMetadataCommandOutput) => void
  ): void;
  getContainerImages(
    args: GetContainerImagesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetContainerImagesCommandOutput>;
  getContainerImages(
    args: GetContainerImagesCommandInput,
    cb: (err: any, data?: GetContainerImagesCommandOutput) => void
  ): void;
  getContainerImages(
    args: GetContainerImagesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetContainerImagesCommandOutput) => void
  ): void;
  getContainerLog(
    args: GetContainerLogCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetContainerLogCommandOutput>;
  getContainerLog(
    args: GetContainerLogCommandInput,
    cb: (err: any, data?: GetContainerLogCommandOutput) => void
  ): void;
  getContainerLog(
    args: GetContainerLogCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetContainerLogCommandOutput) => void
  ): void;
  getContainerServiceDeployments(
    args: GetContainerServiceDeploymentsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetContainerServiceDeploymentsCommandOutput>;
  getContainerServiceDeployments(
    args: GetContainerServiceDeploymentsCommandInput,
    cb: (err: any, data?: GetContainerServiceDeploymentsCommandOutput) => void
  ): void;
  getContainerServiceDeployments(
    args: GetContainerServiceDeploymentsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetContainerServiceDeploymentsCommandOutput) => void
  ): void;
  getContainerServiceMetricData(
    args: GetContainerServiceMetricDataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetContainerServiceMetricDataCommandOutput>;
  getContainerServiceMetricData(
    args: GetContainerServiceMetricDataCommandInput,
    cb: (err: any, data?: GetContainerServiceMetricDataCommandOutput) => void
  ): void;
  getContainerServiceMetricData(
    args: GetContainerServiceMetricDataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetContainerServiceMetricDataCommandOutput) => void
  ): void;
  getContainerServicePowers(
    args: GetContainerServicePowersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetContainerServicePowersCommandOutput>;
  getContainerServicePowers(
    args: GetContainerServicePowersCommandInput,
    cb: (err: any, data?: GetContainerServicePowersCommandOutput) => void
  ): void;
  getContainerServicePowers(
    args: GetContainerServicePowersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetContainerServicePowersCommandOutput) => void
  ): void;
  getContainerServices(
    args: GetContainerServicesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetContainerServicesCommandOutput>;
  getContainerServices(
    args: GetContainerServicesCommandInput,
    cb: (err: any, data?: GetContainerServicesCommandOutput) => void
  ): void;
  getContainerServices(
    args: GetContainerServicesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetContainerServicesCommandOutput) => void
  ): void;
  getCostEstimate(
    args: GetCostEstimateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetCostEstimateCommandOutput>;
  getCostEstimate(
    args: GetCostEstimateCommandInput,
    cb: (err: any, data?: GetCostEstimateCommandOutput) => void
  ): void;
  getCostEstimate(
    args: GetCostEstimateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetCostEstimateCommandOutput) => void
  ): void;
  getDisk(
    args: GetDiskCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDiskCommandOutput>;
  getDisk(
    args: GetDiskCommandInput,
    cb: (err: any, data?: GetDiskCommandOutput) => void
  ): void;
  getDisk(
    args: GetDiskCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDiskCommandOutput) => void
  ): void;
  getDisks(
    args: GetDisksCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDisksCommandOutput>;
  getDisks(
    args: GetDisksCommandInput,
    cb: (err: any, data?: GetDisksCommandOutput) => void
  ): void;
  getDisks(
    args: GetDisksCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDisksCommandOutput) => void
  ): void;
  getDiskSnapshot(
    args: GetDiskSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDiskSnapshotCommandOutput>;
  getDiskSnapshot(
    args: GetDiskSnapshotCommandInput,
    cb: (err: any, data?: GetDiskSnapshotCommandOutput) => void
  ): void;
  getDiskSnapshot(
    args: GetDiskSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDiskSnapshotCommandOutput) => void
  ): void;
  getDiskSnapshots(
    args: GetDiskSnapshotsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDiskSnapshotsCommandOutput>;
  getDiskSnapshots(
    args: GetDiskSnapshotsCommandInput,
    cb: (err: any, data?: GetDiskSnapshotsCommandOutput) => void
  ): void;
  getDiskSnapshots(
    args: GetDiskSnapshotsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDiskSnapshotsCommandOutput) => void
  ): void;
  getDistributionBundles(
    args: GetDistributionBundlesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDistributionBundlesCommandOutput>;
  getDistributionBundles(
    args: GetDistributionBundlesCommandInput,
    cb: (err: any, data?: GetDistributionBundlesCommandOutput) => void
  ): void;
  getDistributionBundles(
    args: GetDistributionBundlesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDistributionBundlesCommandOutput) => void
  ): void;
  getDistributionLatestCacheReset(
    args: GetDistributionLatestCacheResetCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDistributionLatestCacheResetCommandOutput>;
  getDistributionLatestCacheReset(
    args: GetDistributionLatestCacheResetCommandInput,
    cb: (err: any, data?: GetDistributionLatestCacheResetCommandOutput) => void
  ): void;
  getDistributionLatestCacheReset(
    args: GetDistributionLatestCacheResetCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDistributionLatestCacheResetCommandOutput) => void
  ): void;
  getDistributionMetricData(
    args: GetDistributionMetricDataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDistributionMetricDataCommandOutput>;
  getDistributionMetricData(
    args: GetDistributionMetricDataCommandInput,
    cb: (err: any, data?: GetDistributionMetricDataCommandOutput) => void
  ): void;
  getDistributionMetricData(
    args: GetDistributionMetricDataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDistributionMetricDataCommandOutput) => void
  ): void;
  getDistributions(
    args: GetDistributionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDistributionsCommandOutput>;
  getDistributions(
    args: GetDistributionsCommandInput,
    cb: (err: any, data?: GetDistributionsCommandOutput) => void
  ): void;
  getDistributions(
    args: GetDistributionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDistributionsCommandOutput) => void
  ): void;
  getDomain(
    args: GetDomainCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDomainCommandOutput>;
  getDomain(
    args: GetDomainCommandInput,
    cb: (err: any, data?: GetDomainCommandOutput) => void
  ): void;
  getDomain(
    args: GetDomainCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDomainCommandOutput) => void
  ): void;
  getDomains(
    args: GetDomainsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDomainsCommandOutput>;
  getDomains(
    args: GetDomainsCommandInput,
    cb: (err: any, data?: GetDomainsCommandOutput) => void
  ): void;
  getDomains(
    args: GetDomainsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDomainsCommandOutput) => void
  ): void;
  getExportSnapshotRecords(
    args: GetExportSnapshotRecordsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetExportSnapshotRecordsCommandOutput>;
  getExportSnapshotRecords(
    args: GetExportSnapshotRecordsCommandInput,
    cb: (err: any, data?: GetExportSnapshotRecordsCommandOutput) => void
  ): void;
  getExportSnapshotRecords(
    args: GetExportSnapshotRecordsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetExportSnapshotRecordsCommandOutput) => void
  ): void;
  getInstance(
    args: GetInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetInstanceCommandOutput>;
  getInstance(
    args: GetInstanceCommandInput,
    cb: (err: any, data?: GetInstanceCommandOutput) => void
  ): void;
  getInstance(
    args: GetInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetInstanceCommandOutput) => void
  ): void;
  getInstanceAccessDetails(
    args: GetInstanceAccessDetailsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetInstanceAccessDetailsCommandOutput>;
  getInstanceAccessDetails(
    args: GetInstanceAccessDetailsCommandInput,
    cb: (err: any, data?: GetInstanceAccessDetailsCommandOutput) => void
  ): void;
  getInstanceAccessDetails(
    args: GetInstanceAccessDetailsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetInstanceAccessDetailsCommandOutput) => void
  ): void;
  getInstanceMetricData(
    args: GetInstanceMetricDataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetInstanceMetricDataCommandOutput>;
  getInstanceMetricData(
    args: GetInstanceMetricDataCommandInput,
    cb: (err: any, data?: GetInstanceMetricDataCommandOutput) => void
  ): void;
  getInstanceMetricData(
    args: GetInstanceMetricDataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetInstanceMetricDataCommandOutput) => void
  ): void;
  getInstancePortStates(
    args: GetInstancePortStatesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetInstancePortStatesCommandOutput>;
  getInstancePortStates(
    args: GetInstancePortStatesCommandInput,
    cb: (err: any, data?: GetInstancePortStatesCommandOutput) => void
  ): void;
  getInstancePortStates(
    args: GetInstancePortStatesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetInstancePortStatesCommandOutput) => void
  ): void;
  getInstances(
    args: GetInstancesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetInstancesCommandOutput>;
  getInstances(
    args: GetInstancesCommandInput,
    cb: (err: any, data?: GetInstancesCommandOutput) => void
  ): void;
  getInstances(
    args: GetInstancesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetInstancesCommandOutput) => void
  ): void;
  getInstanceSnapshot(
    args: GetInstanceSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetInstanceSnapshotCommandOutput>;
  getInstanceSnapshot(
    args: GetInstanceSnapshotCommandInput,
    cb: (err: any, data?: GetInstanceSnapshotCommandOutput) => void
  ): void;
  getInstanceSnapshot(
    args: GetInstanceSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetInstanceSnapshotCommandOutput) => void
  ): void;
  getInstanceSnapshots(
    args: GetInstanceSnapshotsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetInstanceSnapshotsCommandOutput>;
  getInstanceSnapshots(
    args: GetInstanceSnapshotsCommandInput,
    cb: (err: any, data?: GetInstanceSnapshotsCommandOutput) => void
  ): void;
  getInstanceSnapshots(
    args: GetInstanceSnapshotsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetInstanceSnapshotsCommandOutput) => void
  ): void;
  getInstanceState(
    args: GetInstanceStateCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetInstanceStateCommandOutput>;
  getInstanceState(
    args: GetInstanceStateCommandInput,
    cb: (err: any, data?: GetInstanceStateCommandOutput) => void
  ): void;
  getInstanceState(
    args: GetInstanceStateCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetInstanceStateCommandOutput) => void
  ): void;
  getKeyPair(
    args: GetKeyPairCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetKeyPairCommandOutput>;
  getKeyPair(
    args: GetKeyPairCommandInput,
    cb: (err: any, data?: GetKeyPairCommandOutput) => void
  ): void;
  getKeyPair(
    args: GetKeyPairCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetKeyPairCommandOutput) => void
  ): void;
  getKeyPairs(
    args: GetKeyPairsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetKeyPairsCommandOutput>;
  getKeyPairs(
    args: GetKeyPairsCommandInput,
    cb: (err: any, data?: GetKeyPairsCommandOutput) => void
  ): void;
  getKeyPairs(
    args: GetKeyPairsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetKeyPairsCommandOutput) => void
  ): void;
  getLoadBalancer(
    args: GetLoadBalancerCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetLoadBalancerCommandOutput>;
  getLoadBalancer(
    args: GetLoadBalancerCommandInput,
    cb: (err: any, data?: GetLoadBalancerCommandOutput) => void
  ): void;
  getLoadBalancer(
    args: GetLoadBalancerCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetLoadBalancerCommandOutput) => void
  ): void;
  getLoadBalancerMetricData(
    args: GetLoadBalancerMetricDataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetLoadBalancerMetricDataCommandOutput>;
  getLoadBalancerMetricData(
    args: GetLoadBalancerMetricDataCommandInput,
    cb: (err: any, data?: GetLoadBalancerMetricDataCommandOutput) => void
  ): void;
  getLoadBalancerMetricData(
    args: GetLoadBalancerMetricDataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetLoadBalancerMetricDataCommandOutput) => void
  ): void;
  getLoadBalancers(
    args: GetLoadBalancersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetLoadBalancersCommandOutput>;
  getLoadBalancers(
    args: GetLoadBalancersCommandInput,
    cb: (err: any, data?: GetLoadBalancersCommandOutput) => void
  ): void;
  getLoadBalancers(
    args: GetLoadBalancersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetLoadBalancersCommandOutput) => void
  ): void;
  getLoadBalancerTlsCertificates(
    args: GetLoadBalancerTlsCertificatesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetLoadBalancerTlsCertificatesCommandOutput>;
  getLoadBalancerTlsCertificates(
    args: GetLoadBalancerTlsCertificatesCommandInput,
    cb: (err: any, data?: GetLoadBalancerTlsCertificatesCommandOutput) => void
  ): void;
  getLoadBalancerTlsCertificates(
    args: GetLoadBalancerTlsCertificatesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetLoadBalancerTlsCertificatesCommandOutput) => void
  ): void;
  getLoadBalancerTlsPolicies(
    args: GetLoadBalancerTlsPoliciesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetLoadBalancerTlsPoliciesCommandOutput>;
  getLoadBalancerTlsPolicies(
    args: GetLoadBalancerTlsPoliciesCommandInput,
    cb: (err: any, data?: GetLoadBalancerTlsPoliciesCommandOutput) => void
  ): void;
  getLoadBalancerTlsPolicies(
    args: GetLoadBalancerTlsPoliciesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetLoadBalancerTlsPoliciesCommandOutput) => void
  ): void;
  getOperation(
    args: GetOperationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetOperationCommandOutput>;
  getOperation(
    args: GetOperationCommandInput,
    cb: (err: any, data?: GetOperationCommandOutput) => void
  ): void;
  getOperation(
    args: GetOperationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetOperationCommandOutput) => void
  ): void;
  getOperations(
    args: GetOperationsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetOperationsCommandOutput>;
  getOperations(
    args: GetOperationsCommandInput,
    cb: (err: any, data?: GetOperationsCommandOutput) => void
  ): void;
  getOperations(
    args: GetOperationsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetOperationsCommandOutput) => void
  ): void;
  getOperationsForResource(
    args: GetOperationsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetOperationsForResourceCommandOutput>;
  getOperationsForResource(
    args: GetOperationsForResourceCommandInput,
    cb: (err: any, data?: GetOperationsForResourceCommandOutput) => void
  ): void;
  getOperationsForResource(
    args: GetOperationsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetOperationsForResourceCommandOutput) => void
  ): void;
  getRegions(
    args: GetRegionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRegionsCommandOutput>;
  getRegions(
    args: GetRegionsCommandInput,
    cb: (err: any, data?: GetRegionsCommandOutput) => void
  ): void;
  getRegions(
    args: GetRegionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRegionsCommandOutput) => void
  ): void;
  getRelationalDatabase(
    args: GetRelationalDatabaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRelationalDatabaseCommandOutput>;
  getRelationalDatabase(
    args: GetRelationalDatabaseCommandInput,
    cb: (err: any, data?: GetRelationalDatabaseCommandOutput) => void
  ): void;
  getRelationalDatabase(
    args: GetRelationalDatabaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRelationalDatabaseCommandOutput) => void
  ): void;
  getRelationalDatabaseBlueprints(
    args: GetRelationalDatabaseBlueprintsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRelationalDatabaseBlueprintsCommandOutput>;
  getRelationalDatabaseBlueprints(
    args: GetRelationalDatabaseBlueprintsCommandInput,
    cb: (err: any, data?: GetRelationalDatabaseBlueprintsCommandOutput) => void
  ): void;
  getRelationalDatabaseBlueprints(
    args: GetRelationalDatabaseBlueprintsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRelationalDatabaseBlueprintsCommandOutput) => void
  ): void;
  getRelationalDatabaseBundles(
    args: GetRelationalDatabaseBundlesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRelationalDatabaseBundlesCommandOutput>;
  getRelationalDatabaseBundles(
    args: GetRelationalDatabaseBundlesCommandInput,
    cb: (err: any, data?: GetRelationalDatabaseBundlesCommandOutput) => void
  ): void;
  getRelationalDatabaseBundles(
    args: GetRelationalDatabaseBundlesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRelationalDatabaseBundlesCommandOutput) => void
  ): void;
  getRelationalDatabaseEvents(
    args: GetRelationalDatabaseEventsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRelationalDatabaseEventsCommandOutput>;
  getRelationalDatabaseEvents(
    args: GetRelationalDatabaseEventsCommandInput,
    cb: (err: any, data?: GetRelationalDatabaseEventsCommandOutput) => void
  ): void;
  getRelationalDatabaseEvents(
    args: GetRelationalDatabaseEventsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRelationalDatabaseEventsCommandOutput) => void
  ): void;
  getRelationalDatabaseLogEvents(
    args: GetRelationalDatabaseLogEventsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRelationalDatabaseLogEventsCommandOutput>;
  getRelationalDatabaseLogEvents(
    args: GetRelationalDatabaseLogEventsCommandInput,
    cb: (err: any, data?: GetRelationalDatabaseLogEventsCommandOutput) => void
  ): void;
  getRelationalDatabaseLogEvents(
    args: GetRelationalDatabaseLogEventsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRelationalDatabaseLogEventsCommandOutput) => void
  ): void;
  getRelationalDatabaseLogStreams(
    args: GetRelationalDatabaseLogStreamsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRelationalDatabaseLogStreamsCommandOutput>;
  getRelationalDatabaseLogStreams(
    args: GetRelationalDatabaseLogStreamsCommandInput,
    cb: (err: any, data?: GetRelationalDatabaseLogStreamsCommandOutput) => void
  ): void;
  getRelationalDatabaseLogStreams(
    args: GetRelationalDatabaseLogStreamsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRelationalDatabaseLogStreamsCommandOutput) => void
  ): void;
  getRelationalDatabaseMasterUserPassword(
    args: GetRelationalDatabaseMasterUserPasswordCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRelationalDatabaseMasterUserPasswordCommandOutput>;
  getRelationalDatabaseMasterUserPassword(
    args: GetRelationalDatabaseMasterUserPasswordCommandInput,
    cb: (
      err: any,
      data?: GetRelationalDatabaseMasterUserPasswordCommandOutput
    ) => void
  ): void;
  getRelationalDatabaseMasterUserPassword(
    args: GetRelationalDatabaseMasterUserPasswordCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: GetRelationalDatabaseMasterUserPasswordCommandOutput
    ) => void
  ): void;
  getRelationalDatabaseMetricData(
    args: GetRelationalDatabaseMetricDataCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRelationalDatabaseMetricDataCommandOutput>;
  getRelationalDatabaseMetricData(
    args: GetRelationalDatabaseMetricDataCommandInput,
    cb: (err: any, data?: GetRelationalDatabaseMetricDataCommandOutput) => void
  ): void;
  getRelationalDatabaseMetricData(
    args: GetRelationalDatabaseMetricDataCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRelationalDatabaseMetricDataCommandOutput) => void
  ): void;
  getRelationalDatabaseParameters(
    args: GetRelationalDatabaseParametersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRelationalDatabaseParametersCommandOutput>;
  getRelationalDatabaseParameters(
    args: GetRelationalDatabaseParametersCommandInput,
    cb: (err: any, data?: GetRelationalDatabaseParametersCommandOutput) => void
  ): void;
  getRelationalDatabaseParameters(
    args: GetRelationalDatabaseParametersCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRelationalDatabaseParametersCommandOutput) => void
  ): void;
  getRelationalDatabases(
    args: GetRelationalDatabasesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRelationalDatabasesCommandOutput>;
  getRelationalDatabases(
    args: GetRelationalDatabasesCommandInput,
    cb: (err: any, data?: GetRelationalDatabasesCommandOutput) => void
  ): void;
  getRelationalDatabases(
    args: GetRelationalDatabasesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRelationalDatabasesCommandOutput) => void
  ): void;
  getRelationalDatabaseSnapshot(
    args: GetRelationalDatabaseSnapshotCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRelationalDatabaseSnapshotCommandOutput>;
  getRelationalDatabaseSnapshot(
    args: GetRelationalDatabaseSnapshotCommandInput,
    cb: (err: any, data?: GetRelationalDatabaseSnapshotCommandOutput) => void
  ): void;
  getRelationalDatabaseSnapshot(
    args: GetRelationalDatabaseSnapshotCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRelationalDatabaseSnapshotCommandOutput) => void
  ): void;
  getRelationalDatabaseSnapshots(
    args: GetRelationalDatabaseSnapshotsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetRelationalDatabaseSnapshotsCommandOutput>;
  getRelationalDatabaseSnapshots(
    args: GetRelationalDatabaseSnapshotsCommandInput,
    cb: (err: any, data?: GetRelationalDatabaseSnapshotsCommandOutput) => void
  ): void;
  getRelationalDatabaseSnapshots(
    args: GetRelationalDatabaseSnapshotsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetRelationalDatabaseSnapshotsCommandOutput) => void
  ): void;
  getStaticIp(
    args: GetStaticIpCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetStaticIpCommandOutput>;
  getStaticIp(
    args: GetStaticIpCommandInput,
    cb: (err: any, data?: GetStaticIpCommandOutput) => void
  ): void;
  getStaticIp(
    args: GetStaticIpCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetStaticIpCommandOutput) => void
  ): void;
  getStaticIps(
    args: GetStaticIpsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetStaticIpsCommandOutput>;
  getStaticIps(
    args: GetStaticIpsCommandInput,
    cb: (err: any, data?: GetStaticIpsCommandOutput) => void
  ): void;
  getStaticIps(
    args: GetStaticIpsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetStaticIpsCommandOutput) => void
  ): void;
  importKeyPair(
    args: ImportKeyPairCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ImportKeyPairCommandOutput>;
  importKeyPair(
    args: ImportKeyPairCommandInput,
    cb: (err: any, data?: ImportKeyPairCommandOutput) => void
  ): void;
  importKeyPair(
    args: ImportKeyPairCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ImportKeyPairCommandOutput) => void
  ): void;
  isVpcPeered(
    args: IsVpcPeeredCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<IsVpcPeeredCommandOutput>;
  isVpcPeered(
    args: IsVpcPeeredCommandInput,
    cb: (err: any, data?: IsVpcPeeredCommandOutput) => void
  ): void;
  isVpcPeered(
    args: IsVpcPeeredCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: IsVpcPeeredCommandOutput) => void
  ): void;
  openInstancePublicPorts(
    args: OpenInstancePublicPortsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<OpenInstancePublicPortsCommandOutput>;
  openInstancePublicPorts(
    args: OpenInstancePublicPortsCommandInput,
    cb: (err: any, data?: OpenInstancePublicPortsCommandOutput) => void
  ): void;
  openInstancePublicPorts(
    args: OpenInstancePublicPortsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: OpenInstancePublicPortsCommandOutput) => void
  ): void;
  peerVpc(
    args: PeerVpcCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PeerVpcCommandOutput>;
  peerVpc(
    args: PeerVpcCommandInput,
    cb: (err: any, data?: PeerVpcCommandOutput) => void
  ): void;
  peerVpc(
    args: PeerVpcCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PeerVpcCommandOutput) => void
  ): void;
  putAlarm(
    args: PutAlarmCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutAlarmCommandOutput>;
  putAlarm(
    args: PutAlarmCommandInput,
    cb: (err: any, data?: PutAlarmCommandOutput) => void
  ): void;
  putAlarm(
    args: PutAlarmCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutAlarmCommandOutput) => void
  ): void;
  putInstancePublicPorts(
    args: PutInstancePublicPortsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<PutInstancePublicPortsCommandOutput>;
  putInstancePublicPorts(
    args: PutInstancePublicPortsCommandInput,
    cb: (err: any, data?: PutInstancePublicPortsCommandOutput) => void
  ): void;
  putInstancePublicPorts(
    args: PutInstancePublicPortsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: PutInstancePublicPortsCommandOutput) => void
  ): void;
  rebootInstance(
    args: RebootInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RebootInstanceCommandOutput>;
  rebootInstance(
    args: RebootInstanceCommandInput,
    cb: (err: any, data?: RebootInstanceCommandOutput) => void
  ): void;
  rebootInstance(
    args: RebootInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RebootInstanceCommandOutput) => void
  ): void;
  rebootRelationalDatabase(
    args: RebootRelationalDatabaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RebootRelationalDatabaseCommandOutput>;
  rebootRelationalDatabase(
    args: RebootRelationalDatabaseCommandInput,
    cb: (err: any, data?: RebootRelationalDatabaseCommandOutput) => void
  ): void;
  rebootRelationalDatabase(
    args: RebootRelationalDatabaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RebootRelationalDatabaseCommandOutput) => void
  ): void;
  registerContainerImage(
    args: RegisterContainerImageCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<RegisterContainerImageCommandOutput>;
  registerContainerImage(
    args: RegisterContainerImageCommandInput,
    cb: (err: any, data?: RegisterContainerImageCommandOutput) => void
  ): void;
  registerContainerImage(
    args: RegisterContainerImageCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: RegisterContainerImageCommandOutput) => void
  ): void;
  releaseStaticIp(
    args: ReleaseStaticIpCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ReleaseStaticIpCommandOutput>;
  releaseStaticIp(
    args: ReleaseStaticIpCommandInput,
    cb: (err: any, data?: ReleaseStaticIpCommandOutput) => void
  ): void;
  releaseStaticIp(
    args: ReleaseStaticIpCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ReleaseStaticIpCommandOutput) => void
  ): void;
  resetDistributionCache(
    args: ResetDistributionCacheCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ResetDistributionCacheCommandOutput>;
  resetDistributionCache(
    args: ResetDistributionCacheCommandInput,
    cb: (err: any, data?: ResetDistributionCacheCommandOutput) => void
  ): void;
  resetDistributionCache(
    args: ResetDistributionCacheCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ResetDistributionCacheCommandOutput) => void
  ): void;
  sendContactMethodVerification(
    args: SendContactMethodVerificationCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SendContactMethodVerificationCommandOutput>;
  sendContactMethodVerification(
    args: SendContactMethodVerificationCommandInput,
    cb: (err: any, data?: SendContactMethodVerificationCommandOutput) => void
  ): void;
  sendContactMethodVerification(
    args: SendContactMethodVerificationCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SendContactMethodVerificationCommandOutput) => void
  ): void;
  setIpAddressType(
    args: SetIpAddressTypeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SetIpAddressTypeCommandOutput>;
  setIpAddressType(
    args: SetIpAddressTypeCommandInput,
    cb: (err: any, data?: SetIpAddressTypeCommandOutput) => void
  ): void;
  setIpAddressType(
    args: SetIpAddressTypeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SetIpAddressTypeCommandOutput) => void
  ): void;
  setResourceAccessForBucket(
    args: SetResourceAccessForBucketCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<SetResourceAccessForBucketCommandOutput>;
  setResourceAccessForBucket(
    args: SetResourceAccessForBucketCommandInput,
    cb: (err: any, data?: SetResourceAccessForBucketCommandOutput) => void
  ): void;
  setResourceAccessForBucket(
    args: SetResourceAccessForBucketCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: SetResourceAccessForBucketCommandOutput) => void
  ): void;
  startGUISession(
    args: StartGUISessionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartGUISessionCommandOutput>;
  startGUISession(
    args: StartGUISessionCommandInput,
    cb: (err: any, data?: StartGUISessionCommandOutput) => void
  ): void;
  startGUISession(
    args: StartGUISessionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartGUISessionCommandOutput) => void
  ): void;
  startInstance(
    args: StartInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartInstanceCommandOutput>;
  startInstance(
    args: StartInstanceCommandInput,
    cb: (err: any, data?: StartInstanceCommandOutput) => void
  ): void;
  startInstance(
    args: StartInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartInstanceCommandOutput) => void
  ): void;
  startRelationalDatabase(
    args: StartRelationalDatabaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StartRelationalDatabaseCommandOutput>;
  startRelationalDatabase(
    args: StartRelationalDatabaseCommandInput,
    cb: (err: any, data?: StartRelationalDatabaseCommandOutput) => void
  ): void;
  startRelationalDatabase(
    args: StartRelationalDatabaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StartRelationalDatabaseCommandOutput) => void
  ): void;
  stopGUISession(
    args: StopGUISessionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StopGUISessionCommandOutput>;
  stopGUISession(
    args: StopGUISessionCommandInput,
    cb: (err: any, data?: StopGUISessionCommandOutput) => void
  ): void;
  stopGUISession(
    args: StopGUISessionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StopGUISessionCommandOutput) => void
  ): void;
  stopInstance(
    args: StopInstanceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StopInstanceCommandOutput>;
  stopInstance(
    args: StopInstanceCommandInput,
    cb: (err: any, data?: StopInstanceCommandOutput) => void
  ): void;
  stopInstance(
    args: StopInstanceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StopInstanceCommandOutput) => void
  ): void;
  stopRelationalDatabase(
    args: StopRelationalDatabaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<StopRelationalDatabaseCommandOutput>;
  stopRelationalDatabase(
    args: StopRelationalDatabaseCommandInput,
    cb: (err: any, data?: StopRelationalDatabaseCommandOutput) => void
  ): void;
  stopRelationalDatabase(
    args: StopRelationalDatabaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: StopRelationalDatabaseCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  testAlarm(
    args: TestAlarmCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TestAlarmCommandOutput>;
  testAlarm(
    args: TestAlarmCommandInput,
    cb: (err: any, data?: TestAlarmCommandOutput) => void
  ): void;
  testAlarm(
    args: TestAlarmCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TestAlarmCommandOutput) => void
  ): void;
  unpeerVpc(
    args: UnpeerVpcCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UnpeerVpcCommandOutput>;
  unpeerVpc(
    args: UnpeerVpcCommandInput,
    cb: (err: any, data?: UnpeerVpcCommandOutput) => void
  ): void;
  unpeerVpc(
    args: UnpeerVpcCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UnpeerVpcCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateBucket(
    args: UpdateBucketCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateBucketCommandOutput>;
  updateBucket(
    args: UpdateBucketCommandInput,
    cb: (err: any, data?: UpdateBucketCommandOutput) => void
  ): void;
  updateBucket(
    args: UpdateBucketCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateBucketCommandOutput) => void
  ): void;
  updateBucketBundle(
    args: UpdateBucketBundleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateBucketBundleCommandOutput>;
  updateBucketBundle(
    args: UpdateBucketBundleCommandInput,
    cb: (err: any, data?: UpdateBucketBundleCommandOutput) => void
  ): void;
  updateBucketBundle(
    args: UpdateBucketBundleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateBucketBundleCommandOutput) => void
  ): void;
  updateContainerService(
    args: UpdateContainerServiceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateContainerServiceCommandOutput>;
  updateContainerService(
    args: UpdateContainerServiceCommandInput,
    cb: (err: any, data?: UpdateContainerServiceCommandOutput) => void
  ): void;
  updateContainerService(
    args: UpdateContainerServiceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateContainerServiceCommandOutput) => void
  ): void;
  updateDistribution(
    args: UpdateDistributionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateDistributionCommandOutput>;
  updateDistribution(
    args: UpdateDistributionCommandInput,
    cb: (err: any, data?: UpdateDistributionCommandOutput) => void
  ): void;
  updateDistribution(
    args: UpdateDistributionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateDistributionCommandOutput) => void
  ): void;
  updateDistributionBundle(
    args: UpdateDistributionBundleCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateDistributionBundleCommandOutput>;
  updateDistributionBundle(
    args: UpdateDistributionBundleCommandInput,
    cb: (err: any, data?: UpdateDistributionBundleCommandOutput) => void
  ): void;
  updateDistributionBundle(
    args: UpdateDistributionBundleCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateDistributionBundleCommandOutput) => void
  ): void;
  updateDomainEntry(
    args: UpdateDomainEntryCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateDomainEntryCommandOutput>;
  updateDomainEntry(
    args: UpdateDomainEntryCommandInput,
    cb: (err: any, data?: UpdateDomainEntryCommandOutput) => void
  ): void;
  updateDomainEntry(
    args: UpdateDomainEntryCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateDomainEntryCommandOutput) => void
  ): void;
  updateInstanceMetadataOptions(
    args: UpdateInstanceMetadataOptionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateInstanceMetadataOptionsCommandOutput>;
  updateInstanceMetadataOptions(
    args: UpdateInstanceMetadataOptionsCommandInput,
    cb: (err: any, data?: UpdateInstanceMetadataOptionsCommandOutput) => void
  ): void;
  updateInstanceMetadataOptions(
    args: UpdateInstanceMetadataOptionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateInstanceMetadataOptionsCommandOutput) => void
  ): void;
  updateLoadBalancerAttribute(
    args: UpdateLoadBalancerAttributeCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateLoadBalancerAttributeCommandOutput>;
  updateLoadBalancerAttribute(
    args: UpdateLoadBalancerAttributeCommandInput,
    cb: (err: any, data?: UpdateLoadBalancerAttributeCommandOutput) => void
  ): void;
  updateLoadBalancerAttribute(
    args: UpdateLoadBalancerAttributeCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateLoadBalancerAttributeCommandOutput) => void
  ): void;
  updateRelationalDatabase(
    args: UpdateRelationalDatabaseCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRelationalDatabaseCommandOutput>;
  updateRelationalDatabase(
    args: UpdateRelationalDatabaseCommandInput,
    cb: (err: any, data?: UpdateRelationalDatabaseCommandOutput) => void
  ): void;
  updateRelationalDatabase(
    args: UpdateRelationalDatabaseCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateRelationalDatabaseCommandOutput) => void
  ): void;
  updateRelationalDatabaseParameters(
    args: UpdateRelationalDatabaseParametersCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateRelationalDatabaseParametersCommandOutput>;
  updateRelationalDatabaseParameters(
    args: UpdateRelationalDatabaseParametersCommandInput,
    cb: (
      err: any,
      data?: UpdateRelationalDatabaseParametersCommandOutput
    ) => void
  ): void;
  updateRelationalDatabaseParameters(
    args: UpdateRelationalDatabaseParametersCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: UpdateRelationalDatabaseParametersCommandOutput
    ) => void
  ): void;
}
